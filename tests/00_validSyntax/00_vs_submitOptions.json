{
  "submit_options" :
  {
    "working_directory" : "../../",
    "resources"  : "list your resources here based on HPC specific system",
    "queue"      : "economy",
    "timelimit"  : "01:00:00",
    "wait"       : "True if set, use with caution",
    "arguments"  : 
    { 
      "argset_01"            : [ "arg0", "arg1" ],
      ".*regex.*::argset_02" : [ "argRegex" ]
    },
    "submission"  : "LOCAL",
    "host-specific"   :
    {
      "working_directory" : "../../",
      "resources"  : "list your resources here based on HPC specific system",
      "queue"      : "economy",
      "timelimit"  : "01:00:00",
      "wait"       : "True if set, use with caution",
      "arguments"  : 
      { 
        "argset_01"            : [ "arg0", "arg1" ],
        ".*regex.*::argset_02" : [ "argRegex" ]
      },
      "submission"  : "LOCAL"
    }
  },
  "basic" :
  {
    "steps" :
    {
      "step" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      }
    }
  },
  "basic-fail" :
  {
    "steps" :
    {
      "step" :
      {
        "command"      : "./tests/scripts/echo_nolastline.sh"
      }
    }
  },
  "basic-fail-multistep" :
  {
    "steps" :
    {
      "step-pass" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      },
      "step-fail" :
      {
        "command"      : "./tests/scripts/echo_nolastline.sh"
      }
    }
  },
  "overrideAtTest" :
  {
    "submit_options" : 
    {
      "working_directory" : "../",
      "resources"  : "list your resources here based on HPC specific system",
      "queue"      : "economy",
      "timelimit"  : "01:00:00",
      "wait"       : "True if set, use with caution",
      "arguments"  : 
      { 
        "argset_01"            : [ "arg2", "arg3" ],
        ".*regex.*::argset_02" : [ "argRegex" ]
      },
      "submission"  : "LOCAL",
      "host-specific"   :
      {
        "working_directory" : "../../",
        "resources"  : "list your resources here based on HPC specific system",
        "queue"      : "economy",
        "timelimit"  : "01:00:00",
        "wait"       : "True if set, use with caution",
        "arguments"  : 
        { 
          "argset_01"            : [ "arg0", "arg1" ],
          ".*regex.*::argset_02" : [ "argRegex" ]
        },
        "submission"  : "LOCAL"
      }
    },
    "steps" :
    {
      "step" :
      {
        "command"      : "../tests/scripts/echo_normal.sh"
      }
    }
  },
  "overrideAtStep" :
  {
    "submit_options" : 
    {
      "working_directory" : "../",
      "resources"  : "list your resources here based on HPC specific system",
      "queue"      : "economy",
      "timelimit"  : "01:00:00",
      "wait"       : "True if set, use with caution",
      "arguments"  : 
      { 
        "argset_01"            : [ "arg2", "arg3" ],
        ".*regex.*::argset_02" : [ "argRegex" ]
      },
      "submission"  : "LOCAL",
      "host-specific"   :
      {
        "working_directory" : "../../",
        "resources"  : "list your resources here based on HPC specific system",
        "queue"      : "economy",
        "timelimit"  : "01:00:00",
        "wait"       : "True if set, use with caution",
        "arguments"  : 
        { 
          "argset_01"            : [ "arg0", "arg1" ],
          ".*regex.*::argset_02" : [ "argRegex" ]
        },
        "submission"  : "LOCAL"
      }
    },
    "steps" :
    {
      "stepOverride" :
      {
        "submit_options" :
        {
          "working_directory" : ".",
          "resources"  : "list your resources here based on HPC specific system",
          "queue"      : "economy",
          "timelimit"  : "01:00:00",
          "wait"       : "True if set, use with caution",
          "arguments"  : 
          { 
            "argset_01"            : [ "arg4", "arg5" ],
            ".*regex.*::argset_02" : [ "argRegex" ]
          },
          "submission"  : "LOCAL",
          "host-specific"   :
          {
            "working_directory" : "../../",
            "resources"  : "list your resources here based on HPC specific system",
            "queue"      : "economy",
            "timelimit"  : "01:00:00",
            "wait"       : "True if set, use with caution",
            "arguments"  : 
            { 
              "argset_01"            : [ "arg0", "arg1" ],
              ".*regex.*::argset_02" : [ "argRegex" ]
            },
            "submission"  : "LOCAL"
          }
        },
        "command"      : "../../tests/scripts/echo_normal.sh"
      }
    }
  },
  "basic-regex" :
  {
    "steps" :
    {
      "step" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      }
    }
  },
  "overrideAtTest-regex" :
  {
    "submit_options" : { "arguments" : { ".*regex.*::argset_02" : [ "overrideAtTest" ] } },
    "steps" :
    {
      "step" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      }
    }
  },
  "overrideAtStep-regex" :
  {
    "steps" :
    {
      "submit_options" : { "arguments" : { ".*regex.*::argset_02" : [ "overrideAtStep" ] } },
      "step" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      }
    }
  },
  "applyAtStep-regex" :
  {
    "submit_options" : 
    { 
      "arguments" : 
      { 
        ".*regex.*::argset_02" : [ ],
        ".*setA.*::argRegexA" : [ "setA" ],
        ".*setB.*::argRegexB" : [ "setB" ]
      }
    },
    "steps" :
    {
      "step_setA" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      },
      "step_setB" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      },
      "step_setA_setB" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      },
      "step_none_set_a_set_B_settC_dSet" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      }
    }
  },
  "applyAtStep-sameregex" :
  {
    "submit_options" : 
    { 
      "arguments" : 
      { 
        ".*regex.*::argset_02" : [ ],
        ".*setA.*::argRegex" : [ "setA" ],
        ".*setB.*::argRegex" : [ "setB" ],
        ".*setC.*::argRegex" : [ "setC" ],
        ".*setD.*::argRegex" : [ "setD" ]
      }
    },
    "steps" :
    {
      "step_setA_setB" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      },
      "step_setD_setC" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      },
      "step_setA_setB_setC_setD" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      },
      "step_none_set_a_set_B_settC_dSet" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      }
    }
  },
  "applyAtStep-alphaorderregex" :
  {
    "submit_options" : 
    { 
      "arguments" : 
      { 
        ".*regex.*::argset_02" : [ ],
        ".*setA.*::shouldBeLast" : [ "setA" ],
        ".*setB.*::beSecond" : [ "setB" ],
        ".*setC.*::needsToBeBetween_b_and_s" : [ "setC" ],
        ".*setD.*::alwaysFirst" : [ "setD" ]
      }
    },
    "steps" :
    {
      "step_setA_setB" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      },
      "step_setD_setC" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      },
      "step_setA_setB_setC_setD" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      },
      "step_none_set_a_set_B_settC_dSet" :
      {
        "command"      : "./tests/scripts/echo_normal.sh"
      }
    }
  }
}
